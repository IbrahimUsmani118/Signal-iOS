//
//  Copyright (c) 2019 Open Whisper Systems. All rights reserved.
//

#import "InstalledStickerPack.h"

NS_ASSUME_NONNULL_BEGIN

@implementation InstalledStickerPackItem

- (instancetype)initWithStickerId:(UInt32)stickerId emojiString:(NSString *)emojiString
{
    self = [super init];

    if (!self) {
        return self;
    }

    _stickerId = stickerId;
    _emojiString = emojiString;

    return self;
}

@end

#pragma mark -

@implementation InstalledStickerPack

- (instancetype)initWithInfo:(StickerPackInfo *)info
                       title:(nullable NSString *)title
                      author:(nullable NSString *)author
                       cover:(InstalledStickerPackItem *)cover
                    stickers:(NSArray<InstalledStickerPackItem *> *)items
{
    OWSAssertDebug(info.packId.length > 0);
    OWSAssertDebug(info.packKey.length > 0);
    // Title and empty might be nil or empty.
    OWSAssertDebug(cover);
    OWSAssertDebug(items.count > 0);

    self = [super initWithUniqueId:[InstalledStickerPack uniqueIdForStickerPackInfo:info]];

    if (!self) {
        return self;
    }

    _info = info;
    _author = author;
    _cover = cover;
    _items = items;

    return self;
}

- (NSData *)packId
{
    return self.info.packId;
}

- (NSData *)packKey
{
    return self.info.packKey;
}

- (StickerInfo *)coverInfo
{
    return [[StickerInfo alloc] initWithPackId:self.packId packKey:self.packKey stickerId:self.cover.stickerId];
}

- (NSArray<StickerInfo *> *)stickerInfos
{
    NSMutableArray<StickerInfo *> *stickerInfos = [NSMutableArray new];
    for (InstalledStickerPackItem *item in self.items) {
        [stickerInfos
            addObject:[[StickerInfo alloc] initWithPackId:self.packId packKey:self.packKey stickerId:item.stickerId]];
    }
    return stickerInfos;
}

// --- CODE GENERATION MARKER

// This snippet is generated by /Scripts/sds_codegen/sds_generate.py. Do not manually edit it, instead run `sds_codegen.sh`.

// clang-format off

- (instancetype)initWithUniqueId:(NSString *)uniqueId
                          author:(nullable NSString *)author
                           cover:(InstalledStickerPackItem *)cover
                            info:(StickerPackInfo *)info
                           items:(NSArray<InstalledStickerPackItem *> *)items
                           title:(nullable NSString *)title
{
    self = [super initWithUniqueId:uniqueId];

    if (!self) {
        return self;
    }

    _author = author;
    _cover = cover;
    _info = info;
    _items = items;
    _title = title;

    return self;
}

// clang-format on

// --- CODE GENERATION MARKER

+ (NSString *)uniqueIdForStickerPackInfo:(StickerPackInfo *)info
{
    return info.asKey;
}

@end

NS_ASSUME_NONNULL_END
