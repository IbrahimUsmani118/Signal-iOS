//
//  Copyright Â© 2019 Signal. All rights reserved.
//

import Foundation
import GRDBCipher
import SignalCoreKit

// NOTE: This file is generated by /Users/matthew/code/workspace/ows/Signal-iOS-2/Scripts/sds_codegen/sds_generate.py.
// Do not manually edit it, instead run `sds_codegen.sh`.

// MARK: - SDSSerializable

// The SDSSerializable protocol specifies how to insert and update the
// row that corresponds to this model.
@objc
extension TSGroupThread {

    public override func insertColumnNames() -> [String] {
        // When we insert a new row, we include the following columns:
        //
        // * "record type"
        // * "unique id"
        // * ...all columns that we set when updating.
        return [
            TSThread.recordTypeColumn.columnName,
            uniqueIdColumnName(),
            ] + updateColumnNames()

    }

    // In practice, these values should all be DatabaseValueConvertible,
    // but that protocol is not @objc.
    public override func insertColumnValues() -> [Any] {
        let result: [Any] = [
            SDSRecordType.groupThread.rawValue,
            ] + [uniqueIdColumnValue()] + updateColumnValues()
        if OWSIsDebugBuild() {
            if result.count != insertColumnNames().count {
                owsFailDebug("Update mismatch: \(result.count) != \(insertColumnNames().count)")
            }
        }
        return result
    }

    public override func updateColumnNames() -> [String] {
        return [
            TSThread.archivalDateColumn,
            TSThread.archivedAsOfMessageSortIdColumn,
            TSThread.conversationColorNameColumn,
            TSThread.creationDateColumn,
            TSThread.isArchivedByLegacyTimestampForSortingColumn,
            TSThread.lastMessageDateColumn,
            TSThread.messageDraftColumn,
            TSThread.mutedUntilDateColumn,
            TSThread.shouldThreadBeVisibleColumn,
            TSThread.groupModelColumn,
            ].map { $0.columnName }
    }

    // In practice, these values should all be DatabaseValueConvertible,
    // but that protocol is not @objc.
    public override func updateColumnValues() -> [Any] {
        let result: [Any] = [
            self.archivalDate ?? DatabaseValue.null,
            self.archivedAsOfMessageSortId ?? DatabaseValue.null,
            self.conversationColorName,
            self.creationDate,
            self.isArchivedByLegacyTimestampForSorting,
            self.lastMessageDate ?? DatabaseValue.null,
            self.messageDraft ?? DatabaseValue.null,
            self.mutedUntilDate ?? DatabaseValue.null,
            self.shouldThreadBeVisible,
            self.groupModel,

        ]
        if OWSIsDebugBuild() {
            if result.count != updateColumnNames().count {
                owsFailDebug("Update mismatch: \(result.count) != \(updateColumnNames().count)")
            }
        }
        return result
    }
}
