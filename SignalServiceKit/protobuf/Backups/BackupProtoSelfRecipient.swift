//
// Copyright 2024 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only
//

// Code generated by Wire protocol buffer compiler, do not edit.
// Source: BackupProto.BackupProtoSelfRecipient in Backup.proto
import Wire

public struct BackupProtoSelfRecipient {

    public var unknownFields: UnknownFields = .init()

    public init() {
    }

}

#if !WIRE_REMOVE_EQUATABLE
extension BackupProtoSelfRecipient : Equatable {
}
#endif

#if !WIRE_REMOVE_HASHABLE
extension BackupProtoSelfRecipient : Hashable {
}
#endif

extension BackupProtoSelfRecipient : Sendable {
}

extension BackupProtoSelfRecipient : ProtoDefaultedValue {

    public static var defaultedValue: BackupProtoSelfRecipient {
        BackupProtoSelfRecipient()
    }
}

extension BackupProtoSelfRecipient : ProtoMessage {

    public static func protoMessageTypeURL() -> String {
        return "type.googleapis.com/BackupProto.BackupProtoSelfRecipient"
    }

}

extension BackupProtoSelfRecipient : Proto3Codable {

    public init(from protoReader: ProtoReader) throws {
        let token = try protoReader.beginMessage()
        while let tag = try protoReader.nextTag(token: token) {
            switch tag {
            default: try protoReader.readUnknownField(tag: tag)
            }
        }
        self.unknownFields = try protoReader.endMessage(token: token)

    }

    public func encode(to protoWriter: ProtoWriter) throws {
        try protoWriter.writeUnknownFields(unknownFields)
    }

}

#if !WIRE_REMOVE_CODABLE
extension BackupProtoSelfRecipient : Codable {

    public enum CodingKeys : CodingKey {
    }

}
#endif
